"use strict";(self.webpackChunkcontabo_docs=self.webpackChunkcontabo_docs||[]).push([[7549],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),h=o,f=u["".concat(s,".").concat(h)]||u[h]||p[h]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:5},a=void 0,c={unversionedId:"products/Blockchain/First Steps/Horizen Node",id:"products/Blockchain/First Steps/Horizen Node",title:"Horizen Node",description:"Horizen Node Image",source:"@site/docs/products/Blockchain/First Steps/Horizen Node.md",sourceDirName:"products/Blockchain/First Steps",slug:"/products/Blockchain/First Steps/Horizen Node",permalink:"/docs/products/Blockchain/First Steps/Horizen Node",draft:!1,editUrl:"https://github.com/contabo/docs/tree/main/docs/products/Blockchain/First Steps/Horizen Node.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"productSidebar",previous:{title:"RunOnFlux Node",permalink:"/docs/products/Blockchain/First Steps/RunOnFlux Node"},next:{title:"What is Private Networking?",permalink:"/docs/products/Private-Network/FAQ"}},s={},l=[{value:"Horizen Node Image",id:"horizen-node-image",level:3},{value:"Switch to Horizen user",id:"switch-to-horizen-user",level:3},{value:"Zen-CLI commands:",id:"zen-cli-commands",level:3},{value:"Setting up your node for staking:",id:"setting-up-your-node-for-staking",level:3},{value:"Disable Apache to avoid port conflicts",id:"disable-apache-to-avoid-port-conflicts",level:4},{value:"Install Certbot for SSL",id:"install-certbot-for-ssl",level:4},{value:"Setup Certificates for Horizen Node",id:"setup-certificates-for-horizen-node",level:4},{value:"Write out the Certificates to the config file",id:"write-out-the-certificates-to-the-config-file",level:4},{value:"Restart Zen node",id:"restart-zen-node",level:4},{value:"Install Node Tracker",id:"install-node-tracker",level:3},{value:"Setup the Nodetracker",id:"setup-the-nodetracker",level:4},{value:"Start the Nodetracker (for testing)",id:"start-the-nodetracker-for-testing",level:4},{value:"Start Nodetracker with PM2 for auto-restart",id:"start-nodetracker-with-pm2-for-auto-restart",level:3},{value:"2.4 Read logs of Nodetracker",id:"24-read-logs-of-nodetracker",level:3},{value:"Official Horizen documentation:",id:"official-horizen-documentation",level:3}],d={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"horizen-node-image"},"Horizen Node Image"),(0,o.kt)("p",null,"Contabo's Horizen Node image is based on the Zen (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/HorizenOfficial/zen"},"https://github.com/HorizenOfficial/zen"),")"),(0,o.kt)("p",null,"The image contain every required dependency to setup your Horizen Node for staking."),(0,o.kt)("h3",{id:"switch-to-horizen-user"},"Switch to Horizen user"),(0,o.kt)("p",null,"Switch to horizen user, this user was created for security reasons."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"su horizen")),(0,o.kt)("h3",{id:"zen-cli-commands"},"Zen-CLI commands:"),(0,o.kt)("p",null,"P2P Network info: ",(0,o.kt)("inlineCode",{parentName:"p"},"zen-cli getnetworkinfo")),(0,o.kt)("p",null,"Request sync status: ",(0,o.kt)("inlineCode",{parentName:"p"},"zen-cli getblockchaininfo")),(0,o.kt)("h3",{id:"setting-up-your-node-for-staking"},"Setting up your node for staking:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Following commands should be executed as ",(0,o.kt)("inlineCode",{parentName:"li"},"root")," user (or user with sudo privileges)")),(0,o.kt)("h4",{id:"disable-apache-to-avoid-port-conflicts"},"Disable Apache to avoid port conflicts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl disable apache2\nsudo systemctl stop apache2\n")),(0,o.kt)("h4",{id:"install-certbot-for-ssl"},"Install Certbot for SSL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sudo certbot certonly --preferred-chain "ISRG Root X1" --key-type rsa -n --agree-tos --register-unsafely-without-email --standalone -d $FQDN\n')),(0,o.kt)("h4",{id:"setup-certificates-for-horizen-node"},"Setup Certificates for Horizen Node"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo chown -R horizen:horizen /etc/letsencrypt/\n\nsudo chmod -R 750 /etc/letsencrypt/\n\nsudo csplit -s -z -f /usr/local/share/ca-certificates/intermediate-cert- /etc/letsencrypt/live/$FQDN/chain.pem '/-----BEGIN CERTIFICATE-----/' '{*}' --suffix-format='%02d.crt'\n\n\nsudo update-ca-certificates --fresh\\\n")),(0,o.kt)("h4",{id:"write-out-the-certificates-to-the-config-file"},"Write out the Certificates to the config file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'echo "tlscertpath=/etc/letsencrypt/live/$FQDN/cert.pem" >> /home/horizen/.zen/zen.conf\necho "tlskeypath=/etc/letsencrypt/live/$FQDN/privkey.pem" >> /home/horizen/.zen/zen.conf\n\nexport IPV4=$(ip -4 addr show eth0 | grep -oP \'(?<=inet\\s)\\d+(\\.\\d+){3}\')\n\necho "externalip=$IPV4" >> /home/horizen/.zen/zen.conf\n\necho "port=9033" >> /home/horizen/.zen/zen.conf\n')),(0,o.kt)("h4",{id:"restart-zen-node"},"Restart Zen node"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"This step should be executed by ",(0,o.kt)("inlineCode",{parentName:"li"},"horizen")," user then switch back to ",(0,o.kt)("inlineCode",{parentName:"li"},"root")," user to finish the setup")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"zen-cli stop && sleep 60 && zend && sleep 30\n")),(0,o.kt)("h3",{id:"install-node-tracker"},"Install Node Tracker"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Nodetracker is an application which managing your staking")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sudo apt-get update\nsudo apt-get install -y ca-certificates curl gnupg\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg\n\n\nNODE_MAJOR=18\necho "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list\n\nsudo apt-get update\nsudo apt-get install nodejs -y\n\ncd ~/ && git clone https://github.com/HorizenOfficial/nodetracker.git\n\ncd nodetracker\n\n')),(0,o.kt)("h4",{id:"setup-the-nodetracker"},"Setup the Nodetracker"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ZENCONF=/home/horizen/.zen/zen.conf ZEN_HOME=/home/horizen/.zen/zen.conf node setup.js\n")),(0,o.kt)("h4",{id:"start-the-nodetracker-for-testing"},"Start the Nodetracker (for testing)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ZENCONF=/home/horizen/.zen/zen.conf ZEN_HOME=/home/horizen/.zen/zen.conf node app.js\n")),(0,o.kt)("h3",{id:"start-nodetracker-with-pm2-for-auto-restart"},"Start Nodetracker with PM2 for auto-restart"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install pm2@latest -g\n\nZENCONF=/home/horizen/.zen/zen.conf ZEN_HOME=/home/horizen/.zen/zen.conf pm2 start app.js --name nodetracker\n")),(0,o.kt)("h3",{id:"24-read-logs-of-nodetracker"},"2.4 Read logs of Nodetracker"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"pm2 logs nodetracker\n")),(0,o.kt)("h3",{id:"official-horizen-documentation"},"Official Horizen documentation:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://horizenofficial.atlassian.net/wiki/spaces/ZEN/pages/136872141/Secure+and+Super+Nodes"},"https://horizenofficial.atlassian.net/wiki/spaces/ZEN/pages/136872141/Secure+and+Super+Nodes"))))}p.isMDXComponent=!0}}]);