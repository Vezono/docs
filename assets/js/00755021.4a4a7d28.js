"use strict";(self.webpackChunkcontabo_docs=self.webpackChunkcontabo_docs||[]).push([[6350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=d;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:r,a[1]=u;for(var s=2;s<l;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4950:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const l={sidebar_position:4},a=void 0,u={unversionedId:"products/Blockchain/First Steps/RunOnFlux Node",id:"products/Blockchain/First Steps/RunOnFlux Node",title:"RunOnFlux Node",description:"RunOnFlux Node Image",source:"@site/docs/products/Blockchain/First Steps/RunOnFlux Node.md",sourceDirName:"products/Blockchain/First Steps",slug:"/products/Blockchain/First Steps/RunOnFlux Node",permalink:"/docs/products/Blockchain/First Steps/RunOnFlux Node",draft:!1,editUrl:"https://github.com/contabo/docs/tree/main/docs/products/Blockchain/First Steps/RunOnFlux Node.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"productSidebar",previous:{title:"IPFS Node",permalink:"/docs/products/Blockchain/First Steps/IPFS Node"},next:{title:"Horizen Node",permalink:"/docs/products/Blockchain/First Steps/Horizen Node"}},i={},s=[{value:"RunOnFlux Node Image",id:"runonflux-node-image",level:3},{value:"Switch to Flux user",id:"switch-to-flux-user",level:3},{value:"Start Flux Node config:",id:"start-flux-node-config",level:3},{value:"After installation useful commands:",id:"after-installation-useful-commands",level:3}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"runonflux-node-image"},"RunOnFlux Node Image"),(0,r.kt)("p",null,"Contabo's RunOnFlux Node image is based on the RunOnFlux multitool (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/RunOnFlux/fluxnode-multitool"},"https://github.com/RunOnFlux/fluxnode-multitool"),")"),(0,r.kt)("p",null,"The image contain every required dependency to start your Flux Node setup"),(0,r.kt)("h3",{id:"switch-to-flux-user"},"Switch to Flux user"),(0,r.kt)("p",null,"Switch to flux user, this user was created for security reasons."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"su flux")),(0,r.kt)("h3",{id:"start-flux-node-config"},"Start Flux Node config:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cd /home/flux && ./multitoolbox.sh")),(0,r.kt)("p",null,"Choose Option ",(0,r.kt)("inlineCode",{parentName:"p"},"2 Install Fluxnode")," for start (Docker is already installed)"),(0,r.kt)("p",null,"Follow the steps this will require your Flux Node details."),(0,r.kt)("h3",{id:"after-installation-useful-commands"},"After installation useful commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\ud83d\udccb Pm2 Flux info => status: online, uptime: 8m restarts 0 unstable restarts 0\n\n\u25b6  COMMANDS TO MANAGE FLUX DAEMON.\n\ud83d\udccc Start Flux daemon: sudo systemctl start zelcash\n\ud83d\udccc Stop Flux daemon: sudo systemctl stop zelcash\n\ud83d\udccc Help list: flux-cli help\n\n\u25b6  COMMANDS TO MANAGE BENCHMARK.\n\ud83d\udccc Get info: fluxbench-cli  getinfo\n\ud83d\udccc Check benchmark: fluxbench-cli  getbenchmarks\n\ud83d\udccc Restart benchmark: fluxbench-cli  restartnodebenchmarks\n\ud83d\udccc Stop benchmark: fluxbench-cli  stop\n\ud83d\udccc Start benchmark: sudo systemctl restart zelcash\n\n\u25b6  COMMANDS TO MANAGE FLUX.\n\ud83d\udccc Summary info: pm2 info flux\n\ud83d\udccc Logs in real time: pm2 logs flux\n\ud83d\udccc Stop Flux: pm2 stop flux\n\ud83d\udccc Start Flux: pm2 start flux\n\n\u25b6  COMMANDS TO MANAGE WATCHDOG.\n\ud83d\udccc Stop watchdog: pm2 stop watchdog\n\ud83d\udccc Start watchdog: pm2 start watchdog --watch\n\ud83d\udccc Restart watchdog: pm2 reload watchdog --watch\n\ud83d\udccc Error logs: ~/watchdog/watchdog_error.log\n\ud83d\udccc Logs in real time: pm2 logs watchdog\n\n\ud83d\udccc IMPORTANT: After installation check 'pm2 list' if not work, type 'source /home/flux/.bashrc'\n\n")))}p.isMDXComponent=!0}}]);